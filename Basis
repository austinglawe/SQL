CREATE TABLE basis_names(
            id int auto_increment primary key, 
            school TEXT,
            family_id INT,
            family_name TEXT,
            month_adjusted DATE,
            adjustment_date DATE,
            applied_to_name TEXT,
            fees_name TEXT,
            original_amount FLOAT,
            adjustment_amount FLOAT,
            new_amount FLOAT,
            adjustment_reason TEXT,
            adjusted_by_name TEXT,
            family_last_name TEXT,
            family_first_name TEXT,
            applied_to_last_name TEXT,
            applied_to_first_name TEXT,
            adjusted_by_last_name TEXT,
            adjusted_by_first_name TEXT       
);

___________________________________________EXCEL___________________________________________________________________________________________________
_____OG______
A2 - Family Id
B2 - Family Name
C2 - Month Adjustment
D2 - Date of Adjustment
E2 - Applied On (Family / Student)
F2 - Fees Name
G2 - Orignal Amount
H2 - Adjustment
I2 - New Amount
J2 - Reason for Adjustment
K2 - Adjusted By
L2 - School
____________________________
M2 - Blank
___________________
N2 - family_id
O2 - family_name
P2 - family_last_name
Q2 - family_first_name
R2 - month_adjustment
S2 - adjustment_date
T2 - applied_to_name
U2 - applied_to_last_name
V2 - applied_to_first_name
W2 - fees_name
X2 - original_amount
Y2 - adjustment_amount
Z2 - new_amount
AA2 - adjustment_reason
AB2 - adjusted_by_name
AC2 - adjusted_by_last_name
AD2 - adjusted_by_first_name
AE2 - school
AF1 - "

N2 - =TEXT(A2,"0")
O2 - =P2&", "&Q2
P2 - =PROPER(TRIM(LEFT(B2, FIND(",", B2) - 1)))
Q2 - =PROPER(TRIM(RIGHT(B2, LEN(B2) - FIND(",", B2))))
R2 - =TEXT(C2,"yyyy-mm")
S2 - =IF(LEN(D2)>10,TEXT(LEFT(D2,10),"yyyy-mm-dd"),TEXT(D2,"yyyy-mm-dd"))
T2 - =IF(PROPER(E2)="Family",U2&", "&V2&" (Family)",U2&", "&V2&"")
U2 - =IF(PROPER(E2)<>"Family", PROPER(TRIM(LEFT(E2, FIND(",", E2) - 1))),PROPER(TRIM(LEFT(B2, FIND(",", B2) - 1))))
V2 - =IF(PROPER(E2)<>"Family", PROPER(TRIM(RIGHT(E2, LEN(E2) - FIND(",", E2)))), PROPER(TRIM(RIGHT(B2, LEN(B2) - FIND(",", B2)))))
W2 - =F2
X2 - =G2
Y2 - =H2
Z2 - =I2
AA2 - =J2
AB2 - =AC2&", "&AD2
AC2 - =PROPER(TRIM(LEFT(K2, FIND(",", K2) - 1)))
AD2 - =PROPER(TRIM(RIGHT(K2, LEN(K2) - FIND(",", K2))))
AE2 - =L2
_____________________________________________________________________
AF2 - Blank

AG2 - ="("&$AF$1&AE2&$AF$1&", "&N2&", "&$AF$1&O2&$AF$1&", "&R2&", "&S2&", "&$AF$1&T2&$AF$1&", "&$AF$1&W2&$AF$1&", "&X2&", "&Y2&", "&Z2&", "&$AF$1&AA2&$AF$1&", "&$AF$1&AB2&$AF$1&", "&$AF$1&P2&$AF$1&", "&$AF$1&Q2&$AF$1&", "&$AF$1&U2&$AF$1&", "&$AF$1&V2&$AF$1&", "&$AF$1&AC2&$AF$1&", "&$AF$1&AD2&$AF$1&")"

____________________________________________________________________

            school TEXT, AE2
            family_id INT, N2
            family_name TEXT, O2
            month_adjusted DATE, R2
            adjustment_date DATE, S2
            applied_to_name TEXT, T2
            fees_name TEXT, W2
            original_amount FLOAT, X2
            adjustment_amount FLOAT, Y2
            new_amount FLOAT, Z2
            adjustment_reason TEXT, AA2
            adjusted_by_name TEXT, AB2
            family_last_name TEXT, P2
            family_first_name TEXT, Q2
            applied_to_last_name TEXT, U2
            applied_to_first_name TEXT, V2
            adjusted_by_last_name TEXT, AC2
            adjusted_by_first_name TEXT AD2 
______________________________________________________
", "&
$AF$1&
AG2 - ="("&$AF$1&AE2&$AF$1&", "&N2&", "&$AF$1&O2&$AF$1&", "&R2&", "&S2&", "&$AF$1&T2&$AF$1&", "&$AF$1&W2&$AF$1&", "&X2&", "&Y2&", "&Z2&", "&$AF$1&AA2&$AF$1&", "&$AF$1&AB2&$AF$1&", "&$AF$1&P2&$AF$1&", "&$AF$1&Q2&$AF$1&", "&$AF$1&U2&$AF$1&", "&$AF$1&V2&$AF$1&", "&$AF$1&AC2&$AF$1&", "&$AF$1&AD2&$AF$1&")"

            school TEXT, $AF$1&AE2&$AF$1&
            family_id INT, N2&
            family_name TEXT, $AF$1&O2&$AF$1&
            month_adjusted DATE, R2&", "&
            adjustment_date DATE, S2&", "&
            applied_to_name TEXT, $AF$1&T2&$AF$1&", "&
            fees_name TEXT, $AF$1&W2&$AF$1&", "&
            original_amount FLOAT, X2&", "&
            adjustment_amount FLOAT, Y2&", "&
            new_amount FLOAT, Z2&", "&
            adjustment_reason TEXT, $AF$1&AA2&$AF$1&", "&
            adjusted_by_name TEXT, $AF$1&AB2&$AF$1&", "&
            family_last_name TEXT, $AF$1&P2&$AF$1&", "&
            family_first_name TEXT, $AF$1&Q2&$AF$1&", "&
            applied_to_last_name TEXT, $AF$1&U2&$AF$1&", "&
            applied_to_first_name TEXT, $AF$1&V2&$AF$1&", "&
            adjusted_by_last_name TEXT, $AF$1&AC2&$AF$1&", "&
            adjusted_by_first_name TEXT $AF$1&AD2&$AF$1&", "&

________________________________________________________________________________________________________________________________________
in excel, what formula do I use to to get everything after the , in cell b2
=MID(B2, FIND(",", B2) + 1, LEN(B2) - FIND(",", B2))

in excel, what formula do I use to to get everything before the , in cell b2
=LEFT(B2, FIND(",", B2) - 1)



I want to create a new table to merge my current tables basis_1, basis_2, basis_3, and basis_1;
they have the same columns and I want them to continue after each other; the columns they all have are the same names and those are as follows:
family_id, family_name, family_last_name, family_first_name, month_adjusted, adjustment_date, applied_to_name, applied_to_last_name, applied_to_first_name, fees_name, original_amount, adjustment_amount, new_amount, adjustment_reason, adjusted_by_name, adjusted_by_last_name, adjusted_by_first_name, school

CREATE TABLE merged_basis (
    family_id INT,
    family_name TEXT,
    family_last_name TEXT,
    family_first_name TEXT,
    month_adjusted DATE,
    adjustment_date DATE,
    applied_to_name TEXT,
    applied_to_last_name TEXT,
    applied_to_first_name TEXT,
    fees_name TEXT,
    original_amount FLOAT,
    adjustment_amount FLOAT,
    new_amount FLOAT,
    adjustment_reason TEXT,
    adjusted_by_name TEXT,
    adjusted_by_last_name TEXT,
    adjusted_by_first_name TEXT,
    school TEXT
);

INSERT INTO merged_basis
SELECT * FROM basis_1
UNION ALL
SELECT * FROM basis_2
UNION ALL
SELECT * FROM basis_3
UNION ALL
SELECT * FROM basis_4;


------------------------------------------------------------------------------------------------------------
to find all the students and filter by the family name, student name, and the school
SELECT  count(*) AS number,
		*
FROM basis_students
GROUP BY family_full_name, student_full_name, school
ORDER BY student_full_name
54,200 results (9,742 extra)


to find all the students and filter by family name and student name
SELECT  count(*) AS number,
		*
FROM basis_students
GROUP BY family_full_name, student_full_name
ORDER BY student_full_name
44,458 results



to find all the families
SELECT  count(*) AS number,
		*
FROM basis_students
GROUP BY family_full_name
ORDER BY family_full_name
29,061 results
_______________________________________________________________________________________________________________________________________________________
This is to pull all the relevant family data that I might need to complete my schools
SELECT *
FROM(
SELECT project_family_ids.school AS project_school,
	   project_family_ids.family_id AS project_family_id,
	   project_family_ids.table_in
FROM project_family_ids) AS project_ids
JOIN school_rosters
ON school_rosters.family_id = project_ids.project_family_id)
GROUP BY school, family_id
ORDER BY family_full_name

















SELECT 	COUNT(*) AS family_name_occurrences,
		family_full_name
FROM
(SELECT 	count(*) AS num_of,
		school,
		family_id,
		family_first_name,
		family_last_name,
		family_full_name,
		student_names,
		street_address,
		city,
		state,
		zip,
		email
		
FROM(
SELECT *
FROM(
SELECT project_family_ids.school AS project_school,
	   project_family_ids.family_id AS project_family_id,
	   project_family_ids.table_in
FROM project_family_ids) AS project_ids
JOIN school_rosters
ON school_rosters.family_id = project_ids.project_family_id)
GROUP BY school, family_id
ORDER BY family_full_name)
GROUP BY family_full_name
ORDER BY family_name_occurrences DESC, family_full_name


