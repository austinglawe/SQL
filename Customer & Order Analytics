#In this SQL code, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

# How many orders were placed in January? 
SELECT    COUNT(orderid)
FROM      BIT_DB.JanSales
WHERE     LENGTH(orderid) = 6 
AND       orderid <> 'Order ID'

# How many of those orders were for an iPhone? 
SELECT    COUNT(orderid)
FROM      BIT_DB.JanSales
WHERE     Product = 'iPhone'
AND       LENGTH(orderid) = 6 
AND       orderid <> 'Order ID'

# Select the customer account numbers for all the orders that were placed in February. 
SELECT      DISTINCT acctnum
FROM        BIT_DB.customers cust
INNER JOIN  BIT_DB.FebSales feb
ON          cust.order_id = feb.orderid
WHERE       LENGTH(orderid) = 6 
AND         orderid <> 'Order ID'

# Which product was the cheapest one sold in January, and what was the price? 
SELECT      DISTINCT Product,
            price
FROM        BIT_DB.JanSales
WHERE       price
IN          (SELECT   min(price)
             FROM     BIT_DB.JanSales)
            

# What is the total revenue for each product sold in January?
SELECT    SUM(Quantity)*price AS revenue,
          Product
FROM      BIT_DB.JanSales
GROUP BY  Product



# Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT    SUM(Quantity),
          Product,
          SUM(Quantity)*price AS revenue
FROM      BIT_DB.FebSales 
WHERE     location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY  Product

# How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT    COUNT(DISTINCT cust.acctnum) AS two_plus_ordered,
          AVG(Quantity*price) AS avg_time_spent
FROM      BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON        feb.orderid = cust.order_id
WHERE     feb.Quantity > 2
AND       LENGTH(orderid) = 6
AND       orderid <> 'Order ID'
