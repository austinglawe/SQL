CREATE TABLE billing_and_paid_all (
    school TEXT,
    school_id INT,
    school_year TEXT,
    indicator_id INT,
    family_id INT,
    school_fam_id TEXT,
    OG_family_name TEXT,
    family_first_name TEXT,
    family_last_name TEXT,
    family_full_name TEXT,
    OG_student_name TEXT,
    student_first_name TEXT,
    student_last_name TEXT,
    student_full_name TEXT,
    student_grade TEXT,
    student_code TEXT,
    OG_billing_item TEXT,
    billing_prefix TEXT,
    billing_without_prefix TEXT,
    billing_item TEXT,
    billing_type TEXT,
    months_billed TEXT,
    times_billed INT,
    months_paid TEXT,
    times_paid INT,
    total_billed FLOAT,
    total_paid FLOAT,
    total_unapplied FLOAT,
    billed_minus_paid FLOAT,
    total_aug_2 FLOAT,
    total_sep_2 FLOAT,
    start_yr_01_billed FLOAT,
    start_yr_01_paid FLOAT,
    start_year_02_billed FLOAT,
    start_year_02_paid FLOAT,
    start_year_03_billed FLOAT,
    start_year_03_paid FLOAT,
    start_year_04_billed FLOAT,
    start_year_04_paid FLOAT,
    start_year_05_billed FLOAT,
    start_year_05_paid FLOAT,
    start_year_06_billed FLOAT,
    start_year_06_paid FLOAT,
    start_year_07_billed FLOAT,
    start_year_07_paid FLOAT,
    start_year_08_billed FLOAT,
    start_year_08_paid FLOAT,
    start_year_09_billed FLOAT,
    start_year_09_paid FLOAT,
    start_year_10_billed FLOAT,
    start_year_10_paid FLOAT,
    start_year_11_billed FLOAT,
    start_year_11_paid FLOAT,
    start_year_12_billed FLOAT,
    start_year_12_paid FLOAT,
    end_year_01_billed FLOAT,
    end_year_01_paid FLOAT,
    end_year_02_billed FLOAT,
    end_year_02_paid FLOAT,
    end_year_03_billed FLOAT,
    end_year_03_paid FLOAT,
    end_year_04_billed FLOAT,
    end_year_04_paid FLOAT,
    end_year_05_billed FLOAT,
    end_year_05_paid FLOAT,
    end_year_06_billed FLOAT,
    end_year_06_paid FLOAT,
    end_year_07_billed FLOAT,
    end_year_07_paid FLOAT,
    end_year_08_billed FLOAT,
    end_year_08_paid FLOAT,
    end_year_09_billed FLOAT,
    end_year_09_paid FLOAT,
    current_year_10_billed FLOAT,
    aug_02 FLOAT,
    sep_02 FLOAT,
    unapplied FLOAT
);



INSERT INTO billing_and_paid_all
SELECT * FROM billing_and_paid_merge_1
UNION ALL
SELECT * FROM billing_and_paid_merge_2;














I needed to narrow down that accounts for the chandler students I had to look up:

SELECT *
FROM
(SELECT 	student_full_name,
			school_fam_id
FROM (
SELECT *
FROM billing_and_paid_all
WHERE school_id LIKE "12133") billing_and_paid_all2
JOIN chandler_ready
ON chandler_ready.student_name = billing_and_paid_all2.student_full_name)
GROUP BY student_full_name, school_fam_id
ORDER BY student_full_name





I needed to see only the billing and paid items associated with security deposits.
SELECT 	student_name,
		school_fam_id,
		school_year,
		student_grade,
		billing_item,
		billing_type,
		months_billed,
		times_billed,
		months_paid,
		times_paid,
		total_billed,
		total_paid,
		total_unapplied,
		billed_minus_paid
FROM(
SELECT 	chandler_broken_down.student_full_name AS student_name,
		chandler_broken_down.school_fam_id AS fam_school_id,
		billing_and_paid_all.*
FROM chandler_broken_down
JOIN billing_and_paid_all
ON chandler_broken_down.school_fam_id = billing_and_paid_all.school_fam_id)
WHERE billing_item LIKE "%security%"
OR billing_item LIKE "%employee%"
OR billing_item LIKE "%discount%"
OR billing_item LIKE "%sd%"
OR billing_item LIKE "%financial%"
OR billing_item LIKE "%aid%"
OR billing_item LIKE "%offset%"
ORDER BY student_name









From this formula I looked at all the distinct formulas

SELECT DISTINCT billing_item
FROM(
SELECT 	student_name,
		school_fam_id,
		school_year,
		student_grade,
		billing_item,
		billing_type,
		months_billed,
		times_billed,
		months_paid,
		times_paid,
		total_billed,
		total_paid,
		total_unapplied,
		billed_minus_paid
FROM(
SELECT 	chandler_broken_down.student_full_name AS student_name,
		chandler_broken_down.school_fam_id AS fam_school_id,
		billing_and_paid_all.*
FROM chandler_broken_down
JOIN billing_and_paid_all
ON chandler_broken_down.school_fam_id = billing_and_paid_all.school_fam_id)
WHERE billing_item LIKE "%security%"
OR billing_item LIKE "%employee%"
OR billing_item LIKE "%discount%"
OR billing_item LIKE "%sd%"
OR billing_item LIKE "%financial%"
OR billing_item LIKE "%aid%"
OR billing_item LIKE "%offset%"
ORDER BY student_name)


It came back with this:
AUX-Other: Financial Aid
SD - Security Deposit Employee Credit
OP- Art Box with BOSS Discount
ATF- Security Deposit Donated
EC- NSDA National Tournament Events
Security Deposit Received
SD - Security Deposit Financial Aid
Late Bird - Semester 2 - Paid in Full
Security Deposit Donated
EV- The Little Mermaid- Student Saturday
Financial Aid: Other
EV- The Little Mermaid- Student Friday
Employee Discount
Security Deposit Financial Aid
EV- The Little Mermaid- Adult Friday
EV- The Little Mermaid- Adult Saturday
OP- The Little Mermaid DVD of Performance
OP- The Little Mermaid Photo Disc
Security Deposit 8-12
Security Deposit K-7
Security Deposit  Donated
CL-Applied Financial Math
SD - Security Deposit K-7
SD - Security Deposit 8-12
OFFSET: Security Deposit 8-12
SD: 2020-21 End of year balance move to 2021-22 - Student  Security Deposit
SD: 2020-21 End of year balance - Student Security Deposit
SD: 2021-22 End of year balance move to 2022-23 - Student  Security Deposit
SD: 2021-22 End of year balance - Student Security Deposit
SD - OFFSET: Security Deposit 8-12
SD - OFFSET: Security Deposit K-7
EV- CPR/First Aid Certification Class
OFFSET: Security Deposit K-7


I was able to eliminate many of them and was left with these to create this formula:






SELECT * 
FROM(
SELECT *
FROM(
SELECT 		student_full_name,
		family_full_name,
		indicator_id,
		school_fam_id,
		school_year,
		student_grade,
		billing_item,
		billing_type,
		months_billed,
		times_billed,
		months_paid,
		times_paid,
		total_billed,
		total_paid,
		total_unapplied,
		billed_minus_paid
FROM(
SELECT 	chandler_broken_down.student_full_name AS student_name,
		chandler_broken_down.school_fam_id AS fam_school_id,
		billing_and_paid_all.*
FROM chandler_broken_down
JOIN billing_and_paid_all
ON chandler_broken_down.school_fam_id = billing_and_paid_all.school_fam_id)
WHERE billing_item LIKE "%AUX-Other: Financial Aid%"
OR billing_item LIKE "%SD - Security Deposit Employee Credit%"
OR billing_item LIKE "%ATF- Security Deposit Donated%"
OR billing_item LIKE "%Security Deposit Received%"
OR billing_item LIKE "%SD - Security Deposit Financial Aid%"
OR billing_item LIKE "%Security Deposit Donated%"
OR billing_item LIKE "%Financial Aid: Other%"
OR billing_item LIKE "%Employee Discount%"
OR billing_item LIKE "%Security Deposit Financial Aid%"
OR billing_item LIKE "%Security Deposit 8-12%"
OR billing_item LIKE "%Security Deposit K-7%"
OR billing_item LIKE "%Security Deposit  Donated%"
OR billing_item LIKE "%SD - Security Deposit K-7%"
OR billing_item LIKE "%SD - Security Deposit 8-12%"
OR billing_item LIKE "%OFFSET: Security Deposit 8-12%"
OR billing_item LIKE "%SD: 2020-21 End of year balance move to 2021-22 - Student  Security Deposit%"
OR billing_item LIKE "%SD: 2020-21 End of year balance - Student Security Deposit%"
OR billing_item LIKE "%SD: 2021-22 End of year balance move to 2022-23 - Student  Security Deposit%"
OR billing_item LIKE "%SD: 2021-22 End of year balance - Student Security Deposit%"
OR billing_item LIKE "%SD - OFFSET: Security Deposit 8-12%"
OR billing_item LIKE "%SD - OFFSET: Security Deposit K-7%"
OR billing_item LIKE "%OFFSET: Security Deposit K-7%")
ORDER BY student_name, school_year)
WHERE billing_type LIKE "Discount"





This formula worked out the kinks; the above one was pulling anyone in the indicator id, including siblings, this one narrows it down to the exact name of this person.

SELECT *
FROM(
SELECT 	joined.student_full_name,
		joined.family_full_name,
		joined.indicator_id,
		joined.school_fam_id,
		joined.school_year,
		joined.student_grade,
		joined.billing_item,
		joined.billing_type,
		joined.months_billed,
		joined.times_billed,
		joined.months_paid,
		joined.times_paid,
		joined.total_billed,
		joined.total_paid,
		joined.total_unapplied,
		joined.billed_minus_paid
FROM chandler_broken_down
JOIN(
SELECT 	chandler_broken_down.student_full_name AS student_name,
		chandler_broken_down.school_fam_id AS fam_school_id,
		billing_and_paid_all.*
FROM chandler_broken_down
JOIN billing_and_paid_all
ON chandler_broken_down.school_fam_id = billing_and_paid_all.school_fam_id) AS joined
ON chandler_broken_down.student_full_name = joined.student_full_name)
WHERE billing_item LIKE "%AUX-Other: Financial Aid%"
OR billing_item LIKE "%SD - Security Deposit Employee Credit%"
OR billing_item LIKE "%ATF- Security Deposit Donated%"
OR billing_item LIKE "%Security Deposit Received%"
OR billing_item LIKE "%SD - Security Deposit Financial Aid%"
OR billing_item LIKE "%Security Deposit Donated%"
OR billing_item LIKE "%Financial Aid: Other%"
OR billing_item LIKE "%Employee Discount%"
OR billing_item LIKE "%Security Deposit Financial Aid%"
OR billing_item LIKE "%Security Deposit 8-12%"
OR billing_item LIKE "%Security Deposit K-7%"
OR billing_item LIKE "%Security Deposit  Donated%"
OR billing_item LIKE "%SD - Security Deposit K-7%"
OR billing_item LIKE "%SD - Security Deposit 8-12%"
OR billing_item LIKE "%OFFSET: Security Deposit 8-12%"
OR billing_item LIKE "%SD: 2020-21 End of year balance move to 2021-22 - Student  Security Deposit%"
OR billing_item LIKE "%SD: 2020-21 End of year balance - Student Security Deposit%"
OR billing_item LIKE "%SD: 2021-22 End of year balance move to 2022-23 - Student  Security Deposit%"
OR billing_item LIKE "%SD: 2021-22 End of year balance - Student Security Deposit%"
OR billing_item LIKE "%SD - OFFSET: Security Deposit 8-12%"
OR billing_item LIKE "%SD - OFFSET: Security Deposit K-7%"
OR billing_item LIKE "%OFFSET: Security Deposit K-7%"
ORDER BY student_full_name, school_year

____________________________________________________________________

SELECT *
FROM(
SELECT 	joined.student_full_name,
		joined.family_full_name,
		joined.indicator_id,
		joined.school_fam_id,
		joined.school_year,
		joined.student_grade,
		joined.billing_item,
		joined.billing_type,
		joined.months_billed,
		joined.times_billed,
		joined.months_paid,
		joined.times_paid,
		joined.total_billed,
		joined.total_paid,
		joined.total_unapplied,
		joined.billed_minus_paid
FROM chandler_broken_down
JOIN(
SELECT 	chandler_broken_down.student_full_name AS student_name,
		chandler_broken_down.school_fam_id AS fam_school_id,
		billing_and_paid_all.*
FROM chandler_broken_down
JOIN billing_and_paid_all
ON chandler_broken_down.school_fam_id = billing_and_paid_all.school_fam_id) AS joined
ON chandler_broken_down.student_full_name = joined.student_full_name)
WHERE billing_item LIKE "%AUX-Other: Financial Aid%"
OR billing_item LIKE "%SD - Security Deposit Employee Credit%"
OR billing_item LIKE "%ATF- Security Deposit Donated%"
OR billing_item LIKE "%Security Deposit Received%"
OR billing_item LIKE "%SD - Security Deposit Financial Aid%"
OR billing_item LIKE "%Security Deposit Donated%"
OR billing_item LIKE "%Financial Aid: Other%"
OR billing_item LIKE "%Employee Discount%"
OR billing_item LIKE "%Security Deposit Financial Aid%"
OR billing_item LIKE "%Security Deposit 8-12%"
OR billing_item LIKE "%Security Deposit K-7%"
OR billing_item LIKE "%Security Deposit  Donated%"
OR billing_item LIKE "%SD - Security Deposit K-7%"
OR billing_item LIKE "%SD - Security Deposit 8-12%"
OR billing_item LIKE "%OFFSET: Security Deposit 8-12%"
OR billing_item LIKE "%SD: 2020-21 End of year balance move to 2021-22 - Student  Security Deposit%"
OR billing_item LIKE "%SD: 2020-21 End of year balance - Student Security Deposit%"
OR billing_item LIKE "%SD: 2021-22 End of year balance move to 2022-23 - Student  Security Deposit%"
OR billing_item LIKE "%SD: 2021-22 End of year balance - Student Security Deposit%"
OR billing_item LIKE "%SD - OFFSET: Security Deposit 8-12%"
OR billing_item LIKE "%SD - OFFSET: Security Deposit K-7%"
OR billing_item LIKE "%OFFSET: Security Deposit K-7%"
ORDER BY student_full_name, school_year

____________________________________________________________________________
_______________________________________________________________-
____________________________________________________________

SELECT  pa.pa_student_name,
		bps.*
FROM billing_and_paid_sds AS bps
JOIN project_austin AS pa
ON pa.pa_student_name = bps.student_full_name
ORDER BY student_full_name
____________________________________________________________________________
_______________________________________________________________-
____________________________________________________________
SELECT DISTINCT student_full_name
FROM(
SELECT  pa.pa_student_name,
		bps.*
FROM billing_and_paid_sds AS bps
JOIN project_austin AS pa
ON pa.pa_student_name = bps.student_full_name
ORDER BY student_full_name)
